# Words test set
# https://raw.githubusercontent.com/snowballstem/snowball-data/master/russian/voc.txt

$snowball_path = ARGV.first
$snowball_cmd = "#{$snowball_path}/stemwords -l ru"

perfective_gerund = {
  'в'      => %w[написа|в      проковыля|в],
  'вши'    => %w[написа|вши    заслоня|вши],
  'вшись'  => %w[оберега|вшись обня|вшись],

  'ив'     => %w[насыт|ив],
  'ивши'   => %w[насыт|ивши],
  'ившись' => %w[насыт|ившись],
  'ыв'     => %w[приб|ыв],
  'ывши'   => %w[приб|ывши],
  'ывшись' => %w[незб|ывшись ]
}

adjective = {
  'ее ие ые ое ими ыми' => %w[зелен|ее  висевш|ие ароматн|ые  испорчен|ое иссохш|ими атласн|ыми],
  'ей ий ый ой ем им'   => %w[зелен|ей  баран|ий  аккуратн|ый активн|ой   высохш|ем  глубок|им],
  'ым ом его ого ему'   => %w[главн|ым  главн|ом  бегущ|его   главн|ого   бывш|ему],
  'ому их ых ую юю ая'  => %w[богат|ому больш|их  бурн|ых     бронзов|ую  верхн|юю   весел|ая],
  'яя'                  => %w[внешн|яя],
  'ою'                  => %w[верн|ою ],
  'ею'                  => %w[верхн|ею],
}

adjectival = {
  'ем'      => %w[задава|емые     изменя|ем],
  'нн'      => %w[беспреста|нно   деревя|нными],
  'вш'      => %w[отказа|вшись    отделя|вший],
  'ющ щ'    => %w[сталкива|ющихся спеша|щих
                  умоля|ющими     блестя|щему],

  'ивш ывш' => %w[брод|ивших      несб|ывшееся], # несб|ывш(ее(ся))
  'ующ'     => %w[несуществ|ующий]
}

reflexive = {
  'ся' => %w[осек|ся],
  'сь' => %w[ввы|сь]
}

verb = {
  'ла на ете йте ли й'  => %w[сдела|ла воспита|на сдела|ете   сдела|йте   сдела|ли   сдела|й
                              приня|ла потеря|на  причиня|ете причиня|йте причиня|ли причиня|й],

  'л ем н ло но ет ют'  => %w[сдела|л воспита|ем сдела|н   сдела|ло   сдела|но  сдела|ет   сдела|ют
                              приня|л потеря|ем  растеря|н причиня|ло настоя|но объясня|ет объясня|ют],

  'ны ть ешь'           => %w[сдела|ны  сдела|ть  сдела|ешь
                              потеря|ны потеря|ть потеря|ешь],

  'нно'                 => %w[пута|нно постоя|нно],

  'ила ыла ена ейте'    => %w[беспоко|ила прикр|ыла  выруч|ена   пожал|ейте вспл|ыла], # вспл|ыла?
  'уйте ите или ыли ей' => %w[пожал|уйте  позвол|ите полюб|или   приб|ыли   приникш|ей],
  'уй ил ыл им ым ен'   => %w[протест|уй  проход|ил  раскр|ыл    редк|им    решительн|ым свобод|ен],
  'ило ыло ено ят ует'  => %w[став|ило    неун|ыло   обознач|ено обрат|ят   повеств|ует],
  'уют ит ыт ены ить'   => %w[преслед|уют прибеж|ит  закр|ыт     зауч|ены   затуш|ить],
  'ыть ишь ую ю'        => %w[откр|ыть    отправ|ишь отперт|ую   отрица|ю]
}

noun = {
  'а ев ов ие ье е'     => %w[вод|а       нап|ев     вопрос|ов  здрав|ие здоров|ье вопрос|е],
  'иями ями ами еи ии'  => %w[волнен|иями вопл|ями   вопрос|ами галер|еи гармон|ии],
  'и ией ей ой ий й'    => %w[потер|и     гармон|ией галере|ей  гер|ой   ген|ий    сара|й],
  'иям ям ием ем ам ом' => %w[губерн|иям  двер|ям    биен|ием   братц|ем бумаг|ам  букет|ом],
  'о у ах иях ях ы ь'   => %w[брюх|о      брюх|у     бумаг|ах   здан|иях камн|ях   казн|ы   камен|ь],
  'ию ью ю ия ья я'     => %w[комед|ию    кров|ью    кровл|ю    лечен|ия лист|ья   локт|я]
}

derivational = {
  'ост'  => %w[любезн|остей],
  'ость' => %w[любезн|остью]
}

tidy_up = {
  'н[н]ейш'  => %w[наиполезн|ейший    смирен|нейший],
  'н[н]ейше' => %w[многочислен|нейшее сильн|ейшее],
  'н[н]'     => %w[смирен|но          смирн|о],
  'ь'        => %w[совест|ь]
}

exceptions = {
  # ё => е
  'угнетённый' => 'угнетен',

  # -ию => ''
  'академию' => 'академ'
}

$all_tests = []
$errors = []

def incorrect_stem_msg(result_stem, word, stem)
  "Incorrect stemming '#{result_stem}' for word '#{word}', should be '#{stem}'"
end

def check_words_set(words_set)
  words_set.each do |_rule, test_cases|
    test_cases.each do |test_case|
      stem, ending = test_case.split('|')
      word = [stem, ending].join
      $all_tests << word
      result_stem = (`echo "#{word}" | #{$snowball_cmd}`).strip
      $errors << incorrect_stem_msg(result_stem, word, stem) if result_stem != stem
    end
  end
end

[
  perfective_gerund,
  adjective,
  adjectival,
  reflexive,
  verb,
  noun,
  derivational,
  tidy_up
].each {|words_set| check_words_set(words_set) }

exceptions.each do |word, stem|
  $all_tests << word
  result_stem = (`echo "#{word}" | #{$snowball_cmd}`).strip
  $errors << incorrect_stem_msg(result_stem, word, stem) if result_stem != stem
end

$errors.empty? ? puts("#{$all_tests.count} test(s) passed successfully!") : puts($errors.join("\n"))
