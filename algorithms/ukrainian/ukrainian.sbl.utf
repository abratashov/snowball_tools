stringescapes {}

/* the 33 Ukrainian letters and apostrophe represented by single quote */

stringdef a    '{U+0430}'
stringdef b    '{U+0431}'
stringdef v    '{U+0432}'
stringdef gh   '{U+0433}'
stringdef g    '{U+0491}'
stringdef d    '{U+0434}'
stringdef e    '{U+0435}'
stringdef ye   '{U+0454}'
stringdef zh   '{U+0436}'
stringdef z    '{U+0437}'
stringdef y    '{U+0438}'
stringdef i    '{U+0456}'
stringdef yi   '{U+0457}'
stringdef i`   '{U+0439}'
stringdef k    '{U+043A}'
stringdef l    '{U+043B}'
stringdef m    '{U+043C}'
stringdef n    '{U+043D}'
stringdef o    '{U+043E}'
stringdef p    '{U+043F}'
stringdef r    '{U+0440}'
stringdef s    '{U+0441}'
stringdef t    '{U+0442}'
stringdef u    '{U+0443}'
stringdef f    '{U+0444}'
stringdef kh   '{U+0445}'
stringdef ts   '{U+0446}'
stringdef ch   '{U+0447}'
stringdef sh   '{U+0448}'
stringdef shch '{U+0449}'
stringdef soft '{U+044C}'
stringdef iu   '{U+044E}'
stringdef ia   '{U+044F}'

// Apostrophe-like symbols
// stringdef a_apostrophe      '{U+0027}' // '
// stringdef a_grave_accent   U+0060   // ` cannot to remove system char in Snowball
stringdef a_ml_prime        '{U+02B9}' // ʹ
stringdef a_mlt_comma       '{U+02BB}' // ʻ
stringdef a_ml_apostrophe   '{U+02BC}' // ʼ
stringdef a_mlr_comma       '{U+02BD}' // ʽ
stringdef a_mlv_line        '{U+02C8}' // ˈ
stringdef a_lsq_mark        '{U+2018}' // ‘
stringdef a_rsq_mark        '{U+2019}' // ’
stringdef a_shr9q_mark      '{U+201B}' // ‛
stringdef a_prime           '{U+2032}' // ′

routines (
  prelude
  mark_regions R2
  min_len
  short_word
  long_word
  perfective_gerund
  reflexive
  adjective
  adjectival
  verb
  noun
  remove_last_letter
  derivational
  tidy_up
)

externals ( stem )

integers ( pV p2 )

groupings ( v )

define v 'аеєиіїоуюя'

define prelude as (
  do repeat ( goto (['ґ']) <- 'г' )

  // Remove any apostrophe-like symbols
  do repeat ( goto (['{'}']) delete )
  do repeat ( goto (['ʹ']) delete )
  do repeat ( goto (['ʻ']) delete )
  do repeat ( goto (['ʼ']) delete )
  do repeat ( goto (['ʽ']) delete )
  do repeat ( goto (['ˈ']) delete )
  do repeat ( goto (['‘']) delete )
  do repeat ( goto (['’']) delete )
  do repeat ( goto (['‛']) delete )
  do repeat ( goto (['′']) delete )
)

define mark_regions as (
  $pV = limit
  $p2 = limit
  do (
    gopast v   setmark pV     gopast non-v
    gopast v   gopast non-v   setmark p2
  )
)

backwardmode (
  define R2 as $p2 <= cursor

  define perfective_gerund as (
    [substring] among (
      'вши'   // написа|вши
      'вшись'
      'вшися'
      'учи'
      'ючи'
      'ючись'
      'ючися'
      'ачи'
      'ачись'
      'ачися'
      'лячи'
      'лячись'
      'лячися'
      'ячи'
      'ячись'
      'ячися'
        (delete)
   )
  )

  define reflexive as (
    [substring] among (
      'ється' // смі|ється
      'еться'
      'ся'
      'сь'
        (delete)
    )
  )

  define adjective as (
    [substring] among (
      'ий' 'ого' 'ому' 'им' 'ім'                 // зел|ен.ий
      'іший' 'ішого' 'ішому' 'ішим' 'ішім' 'іше'
      'ої' 'ій' 'ою'
      'іша' 'ішої' 'ішій' 'ішу' 'ішою'
      'их' 'ими'
      'іші' 'іших' 'ішими'
      'ього' 'ьому'
      'ьої' 'ьою'
      'іх' 'іми'
      'ова' 'ове'
      'їй' 'иїй'
      'йому' 'ийому'
      'єє' 'еє'
      'ена' 'ені' 'ене' 'ену'
      'яча' 'яче' 'ячу' 'ячі'
      'ача' 'аче' 'ачу' 'ачі'
      'юча' 'юче' 'ючу' 'ючі'
      'уча' 'уче' 'учу' 'учі'
        (delete)
    )
  )

  define adjectival as (
    adjective

    try (
      [substring] among (
        'ен' 'яч' 'ач' 'юч' 'уч' (delete) // зел|ен.ий
      )
    )
  )

  define verb as (
    [substring] among (
      'ав' 'али' 'ало' 'ала' 'ать' 'ати' // пізнав|ав
      'ме'
      'іть'
      'йте'
      'ла' 'ло' 'ли'
      'ти' 'ть' 'те'
      'єш' 'ємо' 'єте' 'ють'
      'еш' 'емо' 'ете' 'уть'
      'лю' 'иш' 'ить' 'имо' 'ите' 'лять'
      'ляти'
      'їш' 'їть' 'їмо' 'їте' 'ять' 'яти'
        (delete)
    )
  )
  define noun as (
    [substring] among (
      'ам' 'ами' 'ах' // вод|ам
      'ею'
      'ям' 'ями' 'ях'
      'ові' 'ом'
      'ець' 'ем'
      'ень'
      'ой'
      'ію' 'ії'
      'ів'
      'ев' 'ов' 'ей' 'иям' 'иях' 'ию'
      'іям' 'іях'
      'ия' 'єю' 'еві' 'єм' 'їв'
      'ією' 'иєю' 'еєю'
      'ьї' 'ьє' 'ьєю' 'ью' 'ья'
        (delete)
    )
  )

  define remove_last_letter as (
    [substring] among (
      'а' 'в' 'е' 'є' 'и' 'і' // NOUN: вод|а, VERB: вчи|в
      'й' 'о' 'у' 'ь' 'ю' 'я'
        (delete)
    )
  )

  // HERE!!!!
  define derivational as (
    [substring] R2 among (
      'іст' // незалежн|іст.тю
      'ост'
      'еньк'
        (delete)
    )
  )

  define tidy_up as (
    [substring] among (
      'д' ('д' delete) // усевлад|д.ям
      'ж' ('ж' delete)
      'л' ('л' delete)
      'н' ('н' delete)
      'с' ('с' delete)
      'т' ('т' delete)
      'ч' ('ч' delete)
    )
  )

  define min_len as (
    $(len >= 4)
  )

  define short_word as (
    $(len == 4) and remove_last_letter
  )

  define long_word as (
    do (
      perfective_gerund or (
        try reflexive

        adjectival or verb or noun or remove_last_letter
      )
    )

    do derivational
  )
)

define stem as (
  do prelude
  do mark_regions

  backwards setlimit tomark pV for (
    min_len

    short_word or long_word

    do tidy_up
  )
)
